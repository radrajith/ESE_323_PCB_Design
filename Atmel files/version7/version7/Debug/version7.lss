
version7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005ba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00802000  000005ba  0000062e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000632  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000664  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  000006a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002c5c  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001cab  00000000  00000000  000033a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008ef  00000000  00000000  0000504b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001fc  00000000  00000000  0000593c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001509  00000000  00000000  00005b38  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000093d  00000000  00000000  00007041  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  0000797e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  68:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  6c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  70:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  74:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  7c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  80:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  84:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  88:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  8c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  90:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  94:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  98:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  9c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  a8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	cd bf       	out	0x3d, r28	; 61
  b4:	df e2       	ldi	r29, 0x2F	; 47
  b6:	de bf       	out	0x3e, r29	; 62

000000b8 <__do_copy_data>:
  b8:	10 e2       	ldi	r17, 0x20	; 32
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b0 e2       	ldi	r27, 0x20	; 32
  be:	ea eb       	ldi	r30, 0xBA	; 186
  c0:	f5 e0       	ldi	r31, 0x05	; 5
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a4 30       	cpi	r26, 0x04	; 4
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>
  ce:	0e 94 c1 02 	call	0x582	; 0x582 <main>
  d2:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <spi_init_hardware>:
			pushColor(color);
		}
	}
}
void fillScreen(uint16_t color){
	clear(color);
  da:	e0 e4       	ldi	r30, 0x40	; 64
  dc:	f6 e0       	ldi	r31, 0x06	; 6
  de:	80 81       	ld	r24, Z
  e0:	8c 60       	ori	r24, 0x0C	; 12
  e2:	80 83       	st	Z, r24
  e4:	e4 e4       	ldi	r30, 0x44	; 68
  e6:	f6 e0       	ldi	r31, 0x06	; 6
  e8:	80 81       	ld	r24, Z
  ea:	84 60       	ori	r24, 0x04	; 4
  ec:	80 83       	st	Z, r24
  ee:	08 95       	ret

000000f0 <spi_init>:
  f0:	e0 e4       	ldi	r30, 0x40	; 64
  f2:	f6 e0       	ldi	r31, 0x06	; 6
  f4:	80 81       	ld	r24, Z
  f6:	80 6b       	ori	r24, 0xB0	; 176
  f8:	80 83       	st	Z, r24
  fa:	e0 ee       	ldi	r30, 0xE0	; 224
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	80 81       	ld	r24, Z
 100:	80 65       	ori	r24, 0x50	; 80
 102:	80 83       	st	Z, r24
 104:	80 81       	ld	r24, Z
 106:	80 68       	ori	r24, 0x80	; 128
 108:	80 83       	st	Z, r24
 10a:	e4 e4       	ldi	r30, 0x44	; 68
 10c:	f6 e0       	ldi	r31, 0x06	; 6
 10e:	80 81       	ld	r24, Z
 110:	80 61       	ori	r24, 0x10	; 16
 112:	80 83       	st	Z, r24
 114:	08 95       	ret

00000116 <spi_send>:
 116:	80 93 e3 08 	sts	0x08E3, r24	; 0x8008e3 <__TEXT_REGION_LENGTH__+0x7008e3>
 11a:	e2 ee       	ldi	r30, 0xE2	; 226
 11c:	f8 e0       	ldi	r31, 0x08	; 8
 11e:	80 81       	ld	r24, Z
 120:	88 23       	and	r24, r24
 122:	ec f7       	brge	.-6      	; 0x11e <spi_send+0x8>
 124:	08 95       	ret

00000126 <spi_writeCommand>:
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	c4 e4       	ldi	r28, 0x44	; 68
 12c:	d6 e0       	ldi	r29, 0x06	; 6
 12e:	98 81       	ld	r25, Y
 130:	97 7e       	andi	r25, 0xE7	; 231
 132:	98 83       	st	Y, r25
 134:	00 c0       	rjmp	.+0      	; 0x136 <spi_writeCommand+0x10>
 136:	00 c0       	rjmp	.+0      	; 0x138 <spi_writeCommand+0x12>
 138:	00 00       	nop
 13a:	0e 94 8b 00 	call	0x116	; 0x116 <spi_send>
 13e:	88 81       	ld	r24, Y
 140:	80 61       	ori	r24, 0x10	; 16
 142:	88 83       	st	Y, r24
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <spi_writeData>:
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	c4 e4       	ldi	r28, 0x44	; 68
 150:	d6 e0       	ldi	r29, 0x06	; 6
 152:	98 81       	ld	r25, Y
 154:	98 60       	ori	r25, 0x08	; 8
 156:	98 83       	st	Y, r25
 158:	00 00       	nop
 15a:	98 81       	ld	r25, Y
 15c:	9f 7e       	andi	r25, 0xEF	; 239
 15e:	98 83       	st	Y, r25
 160:	0e 94 8b 00 	call	0x116	; 0x116 <spi_send>
 164:	88 81       	ld	r24, Y
 166:	80 61       	ori	r24, 0x10	; 16
 168:	88 83       	st	Y, r24
 16a:	df 91       	pop	r29
 16c:	cf 91       	pop	r28
 16e:	08 95       	ret

00000170 <setAddress>:
 170:	cf 92       	push	r12
 172:	df 92       	push	r13
 174:	ef 92       	push	r14
 176:	ff 92       	push	r15
 178:	0f 93       	push	r16
 17a:	1f 93       	push	r17
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	d8 2e       	mov	r13, r24
 182:	c9 2e       	mov	r12, r25
 184:	16 2f       	mov	r17, r22
 186:	07 2f       	mov	r16, r23
 188:	f4 2e       	mov	r15, r20
 18a:	e5 2e       	mov	r14, r21
 18c:	c2 2f       	mov	r28, r18
 18e:	d3 2f       	mov	r29, r19
 190:	8a e2       	ldi	r24, 0x2A	; 42
 192:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 196:	8c 2d       	mov	r24, r12
 198:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 19c:	8d 2d       	mov	r24, r13
 19e:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1a2:	8e 2d       	mov	r24, r14
 1a4:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1a8:	8f 2d       	mov	r24, r15
 1aa:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1ae:	8b e2       	ldi	r24, 0x2B	; 43
 1b0:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 1b4:	80 2f       	mov	r24, r16
 1b6:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1ba:	81 2f       	mov	r24, r17
 1bc:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1c0:	8d 2f       	mov	r24, r29
 1c2:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1c6:	8c 2f       	mov	r24, r28
 1c8:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 1cc:	8c e2       	ldi	r24, 0x2C	; 44
 1ce:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	ff 90       	pop	r15
 1dc:	ef 90       	pop	r14
 1de:	df 90       	pop	r13
 1e0:	cf 90       	pop	r12
 1e2:	08 95       	ret

000001e4 <reset>:
 1e4:	e4 e4       	ldi	r30, 0x44	; 68
 1e6:	f6 e0       	ldi	r31, 0x06	; 6
 1e8:	80 81       	ld	r24, Z
 1ea:	84 60       	ori	r24, 0x04	; 4
 1ec:	80 83       	st	Z, r24
 1ee:	8f e4       	ldi	r24, 0x4F	; 79
 1f0:	93 ec       	ldi	r25, 0xC3	; 195
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <reset+0xe>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <reset+0x14>
 1f8:	00 00       	nop
 1fa:	80 81       	ld	r24, Z
 1fc:	8b 7f       	andi	r24, 0xFB	; 251
 1fe:	80 83       	st	Z, r24
 200:	8f e4       	ldi	r24, 0x4F	; 79
 202:	93 ec       	ldi	r25, 0xC3	; 195
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <reset+0x20>
 208:	00 c0       	rjmp	.+0      	; 0x20a <reset+0x26>
 20a:	00 00       	nop
 20c:	80 81       	ld	r24, Z
 20e:	84 60       	ori	r24, 0x04	; 4
 210:	80 83       	st	Z, r24
 212:	8f e4       	ldi	r24, 0x4F	; 79
 214:	93 ec       	ldi	r25, 0xC3	; 195
 216:	01 97       	sbiw	r24, 0x01	; 1
 218:	f1 f7       	brne	.-4      	; 0x216 <reset+0x32>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <reset+0x38>
 21c:	00 00       	nop
 21e:	08 95       	ret

00000220 <begin>:
 220:	0e 94 6d 00 	call	0xda	; 0xda <spi_init_hardware>
 224:	0e 94 78 00 	call	0xf0	; 0xf0 <spi_init>
 228:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <reset>
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 232:	2f e3       	ldi	r18, 0x3F	; 63
 234:	8d e0       	ldi	r24, 0x0D	; 13
 236:	93 e0       	ldi	r25, 0x03	; 3
 238:	21 50       	subi	r18, 0x01	; 1
 23a:	80 40       	sbci	r24, 0x00	; 0
 23c:	90 40       	sbci	r25, 0x00	; 0
 23e:	e1 f7       	brne	.-8      	; 0x238 <begin+0x18>
 240:	00 c0       	rjmp	.+0      	; 0x242 <begin+0x22>
 242:	00 00       	nop
 244:	8b ec       	ldi	r24, 0xCB	; 203
 246:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 24a:	89 e3       	ldi	r24, 0x39	; 57
 24c:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 250:	8c e2       	ldi	r24, 0x2C	; 44
 252:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 25c:	84 e3       	ldi	r24, 0x34	; 52
 25e:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 262:	82 e0       	ldi	r24, 0x02	; 2
 264:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 268:	8f ec       	ldi	r24, 0xCF	; 207
 26a:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 26e:	80 e0       	ldi	r24, 0x00	; 0
 270:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 274:	81 ec       	ldi	r24, 0xC1	; 193
 276:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 27a:	80 e3       	ldi	r24, 0x30	; 48
 27c:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 280:	88 ee       	ldi	r24, 0xE8	; 232
 282:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 286:	85 e8       	ldi	r24, 0x85	; 133
 288:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 292:	88 e7       	ldi	r24, 0x78	; 120
 294:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 298:	8a ee       	ldi	r24, 0xEA	; 234
 29a:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2a4:	80 e0       	ldi	r24, 0x00	; 0
 2a6:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2aa:	8d ee       	ldi	r24, 0xED	; 237
 2ac:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 2b0:	84 e6       	ldi	r24, 0x64	; 100
 2b2:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2b6:	83 e0       	ldi	r24, 0x03	; 3
 2b8:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2bc:	82 e1       	ldi	r24, 0x12	; 18
 2be:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2c2:	81 e8       	ldi	r24, 0x81	; 129
 2c4:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2c8:	87 ef       	ldi	r24, 0xF7	; 247
 2ca:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 2ce:	80 e2       	ldi	r24, 0x20	; 32
 2d0:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2d4:	80 ec       	ldi	r24, 0xC0	; 192
 2d6:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 2da:	83 e2       	ldi	r24, 0x23	; 35
 2dc:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2e0:	81 ec       	ldi	r24, 0xC1	; 193
 2e2:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 2e6:	80 e1       	ldi	r24, 0x10	; 16
 2e8:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2ec:	85 ec       	ldi	r24, 0xC5	; 197
 2ee:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 2f2:	8e e3       	ldi	r24, 0x3E	; 62
 2f4:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2f8:	88 e2       	ldi	r24, 0x28	; 40
 2fa:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 2fe:	87 ec       	ldi	r24, 0xC7	; 199
 300:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 304:	86 e8       	ldi	r24, 0x86	; 134
 306:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 30a:	86 e3       	ldi	r24, 0x36	; 54
 30c:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 310:	88 e4       	ldi	r24, 0x48	; 72
 312:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 316:	8a e3       	ldi	r24, 0x3A	; 58
 318:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 31c:	85 e5       	ldi	r24, 0x55	; 85
 31e:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 322:	81 eb       	ldi	r24, 0xB1	; 177
 324:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 32e:	88 e1       	ldi	r24, 0x18	; 24
 330:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 334:	86 eb       	ldi	r24, 0xB6	; 182
 336:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 33a:	88 e0       	ldi	r24, 0x08	; 8
 33c:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 340:	82 e8       	ldi	r24, 0x82	; 130
 342:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 346:	87 e2       	ldi	r24, 0x27	; 39
 348:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 34c:	82 ef       	ldi	r24, 0xF2	; 242
 34e:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 352:	80 e0       	ldi	r24, 0x00	; 0
 354:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 358:	86 e2       	ldi	r24, 0x26	; 38
 35a:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 364:	80 ee       	ldi	r24, 0xE0	; 224
 366:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 36a:	8f e0       	ldi	r24, 0x0F	; 15
 36c:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 370:	81 e3       	ldi	r24, 0x31	; 49
 372:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 376:	8b e2       	ldi	r24, 0x2B	; 43
 378:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 37c:	8c e0       	ldi	r24, 0x0C	; 12
 37e:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 382:	8e e0       	ldi	r24, 0x0E	; 14
 384:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 388:	88 e0       	ldi	r24, 0x08	; 8
 38a:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 38e:	8e e4       	ldi	r24, 0x4E	; 78
 390:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 394:	81 ef       	ldi	r24, 0xF1	; 241
 396:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 39a:	87 e3       	ldi	r24, 0x37	; 55
 39c:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3a0:	87 e0       	ldi	r24, 0x07	; 7
 3a2:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3a6:	80 e1       	ldi	r24, 0x10	; 16
 3a8:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3ac:	83 e0       	ldi	r24, 0x03	; 3
 3ae:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3b2:	8e e0       	ldi	r24, 0x0E	; 14
 3b4:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3b8:	89 e0       	ldi	r24, 0x09	; 9
 3ba:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3c4:	81 ee       	ldi	r24, 0xE1	; 225
 3c6:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 3ca:	80 e0       	ldi	r24, 0x00	; 0
 3cc:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3d0:	8e e0       	ldi	r24, 0x0E	; 14
 3d2:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3d6:	84 e1       	ldi	r24, 0x14	; 20
 3d8:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3dc:	83 e0       	ldi	r24, 0x03	; 3
 3de:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3e2:	81 e1       	ldi	r24, 0x11	; 17
 3e4:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3e8:	87 e0       	ldi	r24, 0x07	; 7
 3ea:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3ee:	81 e3       	ldi	r24, 0x31	; 49
 3f0:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3f4:	81 ec       	ldi	r24, 0xC1	; 193
 3f6:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 3fa:	88 e4       	ldi	r24, 0x48	; 72
 3fc:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 400:	88 e0       	ldi	r24, 0x08	; 8
 402:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 406:	8f e0       	ldi	r24, 0x0F	; 15
 408:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 40c:	8c e0       	ldi	r24, 0x0C	; 12
 40e:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 412:	81 e3       	ldi	r24, 0x31	; 49
 414:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 418:	86 e3       	ldi	r24, 0x36	; 54
 41a:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 41e:	8f e0       	ldi	r24, 0x0F	; 15
 420:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 424:	81 e1       	ldi	r24, 0x11	; 17
 426:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 42a:	8f e2       	ldi	r24, 0x2F	; 47
 42c:	95 e7       	ldi	r25, 0x75	; 117
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
 436:	89 e2       	ldi	r24, 0x29	; 41
 438:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
 43c:	08 95       	ret

0000043e <pushColor>:
 43e:	cf 93       	push	r28
 440:	c8 2f       	mov	r28, r24
 442:	89 2f       	mov	r24, r25
 444:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 448:	8c 2f       	mov	r24, r28
 44a:	0e 94 a5 00 	call	0x14a	; 0x14a <spi_writeData>
 44e:	cf 91       	pop	r28
 450:	08 95       	ret

00000452 <clear>:
 452:	ef 92       	push	r14
 454:	ff 92       	push	r15
 456:	0f 93       	push	r16
 458:	1f 93       	push	r17
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	8c 01       	movw	r16, r24
 460:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <TFTHEIGHT>
 464:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <TFTHEIGHT+0x1>
 468:	21 50       	subi	r18, 0x01	; 1
 46a:	31 09       	sbc	r19, r1
 46c:	40 91 02 20 	lds	r20, 0x2002	; 0x802002 <TFTWIDTH>
 470:	50 91 03 20 	lds	r21, 0x2003	; 0x802003 <TFTWIDTH+0x1>
 474:	41 50       	subi	r20, 0x01	; 1
 476:	51 09       	sbc	r21, r1
 478:	60 e0       	ldi	r22, 0x00	; 0
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 b8 00 	call	0x170	; 0x170 <setAddress>
 484:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <TFTWIDTH>
 488:	90 91 03 20 	lds	r25, 0x2003	; 0x802003 <TFTWIDTH+0x1>
 48c:	89 2b       	or	r24, r25
 48e:	c9 f4       	brne	.+50     	; 0x4c2 <clear+0x70>
 490:	21 c0       	rjmp	.+66     	; 0x4d4 <clear+0x82>
 492:	c0 e0       	ldi	r28, 0x00	; 0
 494:	d0 e0       	ldi	r29, 0x00	; 0
 496:	c8 01       	movw	r24, r16
 498:	0e 94 1f 02 	call	0x43e	; 0x43e <pushColor>
 49c:	21 96       	adiw	r28, 0x01	; 1
 49e:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <TFTHEIGHT>
 4a2:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <TFTHEIGHT+0x1>
 4a6:	c2 17       	cp	r28, r18
 4a8:	d3 07       	cpc	r29, r19
 4aa:	a8 f3       	brcs	.-22     	; 0x496 <clear+0x44>
 4ac:	8f ef       	ldi	r24, 0xFF	; 255
 4ae:	e8 1a       	sub	r14, r24
 4b0:	f8 0a       	sbc	r15, r24
 4b2:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <TFTWIDTH>
 4b6:	90 91 03 20 	lds	r25, 0x2003	; 0x802003 <TFTWIDTH+0x1>
 4ba:	e8 16       	cp	r14, r24
 4bc:	f9 06       	cpc	r15, r25
 4be:	18 f0       	brcs	.+6      	; 0x4c6 <clear+0x74>
 4c0:	09 c0       	rjmp	.+18     	; 0x4d4 <clear+0x82>
 4c2:	e1 2c       	mov	r14, r1
 4c4:	f1 2c       	mov	r15, r1
 4c6:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <TFTHEIGHT>
 4ca:	90 91 01 20 	lds	r25, 0x2001	; 0x802001 <TFTHEIGHT+0x1>
 4ce:	89 2b       	or	r24, r25
 4d0:	01 f7       	brne	.-64     	; 0x492 <clear+0x40>
 4d2:	ec cf       	rjmp	.-40     	; 0x4ac <clear+0x5a>
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	1f 91       	pop	r17
 4da:	0f 91       	pop	r16
 4dc:	ff 90       	pop	r15
 4de:	ef 90       	pop	r14
 4e0:	08 95       	ret

000004e2 <setRotation>:
}

void setRotation(uint8_t x){
 4e2:	cf 93       	push	r28
 4e4:	c8 2f       	mov	r28, r24
	uint8_t rotation;
	spi_writeCommand(0x36);
 4e6:	86 e3       	ldi	r24, 0x36	; 54
 4e8:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
	rotation=x%4;
 4ec:	8c 2f       	mov	r24, r28
 4ee:	83 70       	andi	r24, 0x03	; 3
	switch (rotation)
 4f0:	81 30       	cpi	r24, 0x01	; 1
 4f2:	b1 f0       	breq	.+44     	; 0x520 <setRotation+0x3e>
 4f4:	28 f0       	brcs	.+10     	; 0x500 <setRotation+0x1e>
 4f6:	82 30       	cpi	r24, 0x02	; 2
 4f8:	19 f1       	breq	.+70     	; 0x540 <setRotation+0x5e>
 4fa:	83 30       	cpi	r24, 0x03	; 3
 4fc:	89 f1       	breq	.+98     	; 0x560 <setRotation+0x7e>
 4fe:	3f c0       	rjmp	.+126    	; 0x57e <setRotation+0x9c>
	{
		case 0:
		spi_writeCommand(0x40|0x08);
 500:	88 e4       	ldi	r24, 0x48	; 72
 502:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
		TFTWIDTH = 240;
 506:	80 ef       	ldi	r24, 0xF0	; 240
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <TFTWIDTH>
 50e:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <TFTWIDTH+0x1>
		TFTHEIGHT = 320;
 512:	80 e4       	ldi	r24, 0x40	; 64
 514:	91 e0       	ldi	r25, 0x01	; 1
 516:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <TFTHEIGHT>
 51a:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <TFTHEIGHT+0x1>
		break;
 51e:	2f c0       	rjmp	.+94     	; 0x57e <setRotation+0x9c>
		case 1:
		spi_writeCommand(0x20|0x08);
 520:	88 e2       	ldi	r24, 0x28	; 40
 522:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
		TFTWIDTH  = 320;
 526:	80 e4       	ldi	r24, 0x40	; 64
 528:	91 e0       	ldi	r25, 0x01	; 1
 52a:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <TFTWIDTH>
 52e:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <TFTWIDTH+0x1>
		TFTHEIGHT = 240;
 532:	80 ef       	ldi	r24, 0xF0	; 240
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <TFTHEIGHT>
 53a:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <TFTHEIGHT+0x1>
		break;
 53e:	1f c0       	rjmp	.+62     	; 0x57e <setRotation+0x9c>
		case 2:
		spi_writeCommand(0x80|0x08);
 540:	88 e8       	ldi	r24, 0x88	; 136
 542:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
		TFTWIDTH  = 240;
 546:	80 ef       	ldi	r24, 0xF0	; 240
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <TFTWIDTH>
 54e:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <TFTWIDTH+0x1>
		TFTHEIGHT = 320;
 552:	80 e4       	ldi	r24, 0x40	; 64
 554:	91 e0       	ldi	r25, 0x01	; 1
 556:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <TFTHEIGHT>
 55a:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <TFTHEIGHT+0x1>
		break;
 55e:	0f c0       	rjmp	.+30     	; 0x57e <setRotation+0x9c>
		case 3:
		spi_writeCommand(0x40|0x80|0x20|0x08);
 560:	88 ee       	ldi	r24, 0xE8	; 232
 562:	0e 94 93 00 	call	0x126	; 0x126 <spi_writeCommand>
		TFTWIDTH  = 320;
 566:	80 e4       	ldi	r24, 0x40	; 64
 568:	91 e0       	ldi	r25, 0x01	; 1
 56a:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <TFTWIDTH>
 56e:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <TFTWIDTH+0x1>
		TFTHEIGHT = 240;
 572:	80 ef       	ldi	r24, 0xF0	; 240
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <TFTHEIGHT>
 57a:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <TFTHEIGHT+0x1>
		break;
	}
}
 57e:	cf 91       	pop	r28
 580:	08 95       	ret

00000582 <main>:



int main(void)
{
	begin();					//initialize driver
 582:	0e 94 10 01 	call	0x220	; 0x220 <begin>
	clear(ILI9341_RED);		//clear the 
 586:	80 e0       	ldi	r24, 0x00	; 0
 588:	98 ef       	ldi	r25, 0xF8	; 248
 58a:	0e 94 29 02 	call	0x452	; 0x452 <clear>
	setRotation(2);				//change this between 0 and 3 depending on the orientation of the 
 58e:	82 e0       	ldi	r24, 0x02	; 2
 590:	0e 94 71 02 	call	0x4e2	; 0x4e2 <setRotation>
    while(1)
    {
	//_delay_ms(1000);
        //TODO:://write to data register Please write your application code 
		clear(ILI9341_GREENYELLOW);
 594:	85 ee       	ldi	r24, 0xE5	; 229
 596:	9f ea       	ldi	r25, 0xAF	; 175
 598:	0e 94 29 02 	call	0x452	; 0x452 <clear>
		//_delay_ms(100);
		clear(ILI9341_BLUE);
 59c:	8f e1       	ldi	r24, 0x1F	; 31
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	0e 94 29 02 	call	0x452	; 0x452 <clear>
		clear(ILI9341_YELLOW);
 5a4:	80 ee       	ldi	r24, 0xE0	; 224
 5a6:	9f ef       	ldi	r25, 0xFF	; 255
 5a8:	0e 94 29 02 	call	0x452	; 0x452 <clear>
		clear(ILI9341_SILVER);
 5ac:	88 e1       	ldi	r24, 0x18	; 24
 5ae:	96 ec       	ldi	r25, 0xC6	; 198
 5b0:	0e 94 29 02 	call	0x452	; 0x452 <clear>
		//_delay_ms(100);
    }
 5b4:	ef cf       	rjmp	.-34     	; 0x594 <main+0x12>

000005b6 <_exit>:
 5b6:	f8 94       	cli

000005b8 <__stop_program>:
 5b8:	ff cf       	rjmp	.-2      	; 0x5b8 <__stop_program>
